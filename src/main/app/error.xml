<?xml version="1.0" encoding="UTF-8"?>
 
<mule xmlns:vm="http://www.mulesoft.org/schema/mule/vm"
       xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
       xmlns:spring="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.mulesoft.org/schema/mule/vm http://www.mulesoft.org/schema/mule/vm/current/mule-vm.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd">
      
    <choice-exception-strategy name="global-exception-handlerChoice_Exception_Strategy">
              <catch-exception-strategy when="#[exception.causedBy(com.mulesoft.weave.mule.exception.WeaveExecutionException)]" doc:name="Dataweave Exception">
            <logger message="Dataweave Exception" level="INFO" doc:name="Log Exception to Console"/>
            <set-variable variableName="exceptionClass" value="#['DW_EXCEPTION']" doc:name="Set Exception Class"/>
            <set-variable variableName="exceptionObject" value="#[exception.cause != null ? exception.cause : exception]" doc:name="Set Exception Cause"/>
            <message-properties-transformer doc:name="Message Properties">
                <add-message-property key="EXCEPTION_MESSAGE" value="#[flowVars.exceptionObject.message]"/>
            </message-properties-transformer>
            <set-payload value="#[flowVars.originalPayload]" doc:name="Setting Original Payload"/>
              </catch-exception-strategy>
        <catch-exception-strategy when="#[exception.causedBy(org.mule.extension.validation.api.ValidationException)]" doc:name="Non Retriable Business Exception">
            <logger message="Non Retriable Business Exception" level="INFO" doc:name="Log Exception to Console"/>
            <set-variable variableName="exceptionClass" value="#['BUSINESS_EXCEPTION']" doc:name="Set Exception Class"/>
            <set-variable variableName="exceptionObject" value="#[exception.cause != null ? exception.cause : exception]" doc:name="Set Exception Cause"/>
            <message-properties-transformer doc:name="Message Properties" mimeType="application/json">
                <add-message-property key="http.status" value="500"/>
                <rename-message-property key="EXCEPTION_MESSAGE" value="#[flowVars.exceptionObject.message]"/>
            </message-properties-transformer>
            <set-payload value="#[flowVars.originalPayload]" doc:name="Setting Original Payload"/>
        </catch-exception-strategy>
              <catch-exception-strategy when="#[exception.causedBy(org.mule.module.apikit.exception.NotAcceptableException)]" doc:name="Not Acceptable Exception Handler">
            <logger message="#[payload]" level="ERROR" doc:name="Log Request Malformed"/>
            <message-properties-transformer doc:name="Message Properties">
                <add-message-property key="http.status" value="406"/>
            </message-properties-transformer>
            <set-payload value="{
    &quot;code&quot;: &quot;KO&quot;
  }" doc:name="Error Payload"/>
        </catch-exception-strategy>
        <catch-exception-strategy when="#[exception.causedBy(org.mule.module.apikit.exception.MethodNotAllowedException)]" doc:name="Method Not Allowed">
            <logger message="#[payload]" level="ERROR" doc:name="Log Request Malformed"/>
            <message-properties-transformer doc:name="Message Properties">
                <add-message-property key="http.status" value="405"/>
            </message-properties-transformer>
            <set-payload value="{
    &quot;code&quot;: &quot;KO&quot;
  }" doc:name="Error Payload"/>
        </catch-exception-strategy>
        <catch-exception-strategy when="#[exception.causedBy(org.mule.module.apikit.exception.NotFoundException)]" doc:name="Resource Not Found">
            <logger message="#[payload]" level="ERROR" doc:name="Log Request Malformed"/>
            <message-properties-transformer doc:name="Message Properties">
                <add-message-property key="http.status" value="404"/>
            </message-properties-transformer>
            <set-payload value="{    
       &quot;code&quot;: &quot;KO&quot;  
       }" doc:name="Error Payload"/>
        </catch-exception-strategy>
       
        <catch-exception-strategy when="#[exception.causedBy(org.apache.http.auth.InvalidCredentialsException)]" doc:name="Invalid Credentials Exception Handler">
            <logger message="#[payload]" level="ERROR" doc:name="Invalid Credentials Exception"/>
            <message-properties-transformer doc:name="Message Properties">
                <add-message-property key="http.status" value="401"/>
            </message-properties-transformer>
            <set-payload value="{
    &quot;code&quot;: &quot;KO&quot;
  }" doc:name="Error Payload"/>
        </catch-exception-strategy>
             
       
        <catch-exception-strategy when="#[exception.causedBy(org.mule.module.apikit.exception.BadRequestException)]" doc:name="Bad Request Exception Handler">
            <logger message="#[payload]" level="ERROR" doc:name="Request Malformed"/>
            <message-properties-transformer doc:name="Message Properties">
                <add-message-property key="http.status" value="400"/>
            </message-properties-transformer>
            <set-payload value="{
    &quot;code&quot;: &quot;KO&quot;
  }" doc:name="Error Payload"/>
        </catch-exception-strategy>
        <catch-exception-strategy when="#[exception.causedBy(java.net.ConnectException)]" doc:name="Connection Exception Handler">
            <logger message="#[payload]" level="ERROR" doc:name="Connection Exception"/>
            <message-properties-transformer doc:name="Message Properties">
                <add-message-property key="http.status" value="400"/>
            </message-properties-transformer>
            <set-payload value="{
    &quot;code&quot;: &quot;KO&quot;
  }" doc:name="Error Payload"/>
        </catch-exception-strategy>
              <rollback-exception-strategy maxRedeliveryAttempts="2" doc:name="Rollback Exception Strategy" when="#[exception.causedBy(java.sql.SQLException)]">
            <logger message="Rolling back: #[message.inboundProperties.'JMSXDeliveryCount' == null  ? 1 : message.inboundProperties.'JMSXDeliveryCount'] #[exception.class]" level="ERROR" doc:name="Log Rollback Details to Console"/>
            <on-redelivery-attempts-exceeded>
                <logger message="#### System exception. #[exception.class]" level="ERROR" doc:name="Log Redelivery Exhausted to Console"/>
                <copy-properties propertyName="*" doc:name="Copy Header Properties"/>
                <message-properties-transformer doc:name="Add to Header Properties">
                    <add-message-property key="EXCEPTION_MESSAGE" value="Database unavailable"/>
                    <add-message-property key="MULE_REDELIVERY_COUNT" value="#[message.inboundProperties.'JMSXDeliveryCount' -1]"/>
                </message-properties-transformer>
                <vm:outbound-endpoint exchange-pattern="one-way" path="/errors" doc:name="VM"/>
            </on-redelivery-attempts-exceeded>
        </rollback-exception-strategy>
        <catch-exception-strategy doc:name="Default Exception Handler">
              <logger message="Default exception handler catch all." level="ERROR" doc:name="Log Default Catch-All to Console"/>
        </catch-exception-strategy>
    </choice-exception-strategy>
</mule>